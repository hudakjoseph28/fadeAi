// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model TokenMeta {
  tokenMint String  @id
  symbol    String?
  decimals  Int?
  updatedAt DateTime @default(now())
}

model Candle {
  id         String   @id @default(cuid())
  tokenMint  String
  t          Int      // epoch seconds
  o          Float    // open
  h          Float    // high
  l          Float    // low
  c          Float    // close
  resolution String   // 1m, 5m, 1h, 1d
  createdAt  DateTime @default(now())

  @@index([tokenMint, t, resolution])
  @@unique([tokenMint, t, resolution])
}

model SyncState {
  id           String  @id // "wallet:<pubkey>"
  wallet       String  @unique
  // The last paginated 'before' signature we processed when scanning backwards
  lastBefore   String? // Helius 'before' cursor (signature)
  // Highest fully-verified slot we consider complete
  verifiedSlot Int?    
  // ISO string for last completed full scan
  fullScanAt   DateTime?
  updatedAt    DateTime @updatedAt
  createdAt    DateTime @default(now())
}

model RawTx {
  signature  String  @id
  slot       Int
  blockTime  Int?
  json       String  // full original payload from Helius (JSON string)
  ingestedAt DateTime @default(now())
  // For multi-wallet tracking; duplicated signature will not reinsert due to PK
}

model WalletTx {
  // Each wallet-touching record for a signature. one signature can yield N rows (e.g., multiple token events).
  id            String  @id // `${wallet}_${signature}_${index}`
  wallet        String
  signature     String
  index         Int
  slot          Int
  blockTime     Int?
  program       String?     // raydium/orca/system/token/jupiter/etc
  type          String      // BUY|SELL|SWAP|TRANSFER|MINT|BURN|WRAP|UNWRAP|ATA_CREATE|ATA_CLOSE|UNKNOWN
  direction     String?     // IN|OUT|SELF|N/A
  tokenMint     String?     
  tokenSymbol   String?
  tokenDecimals Int?
  amountRaw     String?     // string form to avoid float
  amountUi      Float?
  amountUsd     Float?      // optional anchor if available
  priceUsdAtTx  Float?      // optional historical price
  meta          String?     // extra parsed fields (pair, pool, route, fee info, accounts) as JSON string
  ingestedAt    DateTime @default(now())

  @@index([wallet, slot])
  @@index([signature, index])
}

model ReconcileAudit {
  id         String   @id // `${wallet}_${fromSlot}_${toSlot}_${timestamp}`
  wallet     String
  fromSlot   Int
  toSlot     Int
  countRaw   Int
  countWalletTx Int
  hash       String   // deterministic hash of signature set
  ok         Boolean
  createdAt  DateTime @default(now())

  @@index([wallet, fromSlot, toSlot])
}
